/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jframe;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import soap.common.Shop;
import soap.common.ShopItem;

/**
 *
 * @author yifeng
 */
public class ItemsManagementUI extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private ShopItem newItem = null;
    private String shopId;
    private Shop shop;
    private List<ShopItem> shoppingItems;
    private ShopItem shopItem = null;
    private String restTitle;

    /**
     * Creates new form ItemsManagementUI
     */
    public ItemsManagementUI() {
        initComponents();
    }

    public ItemsManagementUI(String shopId) {
        initComponents();
        this.shopId = shopId;
    }
    
    public ItemsManagementUI(String shopId, String restTitle) {
        initComponents();
        this.shopId = shopId;
        this.restTitle = restTitle;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAddItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jTextFieldItemName = new javax.swing.JTextField();
        jTextFieldBarcode = new javax.swing.JTextField();
        jTextFieldQuantity = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jTextFieldCategory = new javax.swing.JTextField();
        jButtonDeleteItem = new javax.swing.JButton();
        jButtonUpdateItem = new javax.swing.JButton();
        jButtonLogout = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("Shop Items Management");

        jTable1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Item Information");

        jButtonAddItem.setText("Add Item");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        jLabel3.setText("Name: ");

        jLabel4.setText("Barcode: ");

        jLabel5.setText("Quantity: ");

        jLabel6.setText("Price: ");

        jLabel7.setText("Category: ");

        jLabel8.setText("Description: ");

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDescription);

        jTextFieldItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldItemNameActionPerformed(evt);
            }
        });

        jTextFieldBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBarcodeActionPerformed(evt);
            }
        });
        jTextFieldBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBarcodeKeyReleased(evt);
            }
        });

        jTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityActionPerformed(evt);
            }
        });

        jTextFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPriceActionPerformed(evt);
            }
        });

        jTextFieldCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCategoryActionPerformed(evt);
            }
        });

        jButtonDeleteItem.setText("Delete Item");
        jButtonDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteItemActionPerformed(evt);
            }
        });

        jButtonUpdateItem.setText("Update Item");
        jButtonUpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateItemActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel2)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel8)
                                    .add(jLabel3)
                                    .add(jLabel5)
                                    .add(jLabel4)
                                    .add(jLabel6)
                                    .add(jLabel7))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jScrollPane2)
                                    .add(jTextFieldCategory)
                                    .add(jTextFieldPrice)
                                    .add(jTextFieldQuantity)
                                    .add(jTextFieldBarcode)
                                    .add(jTextFieldItemName)))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jButtonAddItem)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButtonUpdateItem)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButtonDeleteItem))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextFieldItemName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextFieldBarcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jTextFieldQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jTextFieldPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(jTextFieldCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButtonAddItem)
                            .add(jButtonDeleteItem)
                            .add(jButtonUpdateItem))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jButtonLogout.setText("Logout");
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        jLabel9.setText("CIR ZARA");

        jButton1.setText("Back to Panel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 548, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel9)
                .add(17, 17, 17))
            .add(jPanel1Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 569, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jButton1)
                        .add(18, 18, 18)
                        .add(jButtonLogout)
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 116, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButtonLogout)
                            .add(jButton1))
                        .add(30, 30, 30))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 474, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        // TODO add your handling code here:
        if (this.checkNullInput()) {
            if (shopItem == null) {
                System.out.println(jTextFieldItemName.getText());
                newItem = new ShopItem();
                newItem.setName(jTextFieldItemName.getText());
                newItem.setBarcode(Long.valueOf(jTextFieldBarcode.getText()));
                newItem.setQuantity(Integer.valueOf(jTextFieldQuantity.getText()));
                newItem.setPrice(Float.valueOf(jTextFieldPrice.getText()));
                newItem.setCategory(jTextFieldCategory.getText());
                newItem.setDescription(jTextAreaDescription.getText());
                //pass in shopId as String
                ShopItem response = addShoppingMallItem(shopId, newItem);
                //use the item returned from 
                if (response != null) {
                    //tableModel.addRow(new Object[]{response.getId(), jTextFieldItemName.getText(), jTextFieldQuantity.getText(), jTextFieldPrice.getText(), jTextFieldCategory.getText()});
                    this.loadTable();
                    JOptionPane.showMessageDialog(this, "Item Added Successfully", "Item Processing Status", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add item", "Item Processing Status", JOptionPane.INFORMATION_MESSAGE);
                }
                this.setAllToNull();
            } else {
                JOptionPane.showMessageDialog(this, "This item has already been added to shop, please choose update instead", "Operational Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "All fields are required and cannot be null", "Operational Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void setAllToNull() {
        jTextFieldItemName.setText("");
        jTextFieldBarcode.setText("");
        jTextFieldQuantity.setText("");
        jTextFieldPrice.setText("");
        jTextFieldCategory.setText("");
        jTextAreaDescription.setText("");
    }

    private boolean checkNullInput() {
        if ((jTextFieldItemName.getText().equals("")) || (jTextFieldBarcode.getText().equals("")) || (jTextFieldQuantity.getText().equals(""))
                || (jTextFieldPrice.getText().equals("")) || (jTextFieldCategory.getText().equals("")) || (jTextAreaDescription.getText().equals(""))) {
            return false;
        }
        return true;
    }
    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed
        // TODO add your handling code here:
        ShoppingMallLoginUI mainMenuUI = new ShoppingMallLoginUI();
        this.setVisible(false);
        mainMenuUI.setVisible(true);
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    private void jTextFieldItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldItemNameActionPerformed

    private void jTextFieldBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBarcodeActionPerformed

    private void jTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantityActionPerformed

    private void jTextFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPriceActionPerformed

    private void jTextFieldCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCategoryActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadTable();
        System.out.println("shopId " + shopId);
        shop = getShopById(Long.valueOf(shopId));
        jLabel9.setText(shop.getShopName());
        if((restTitle == null)&&(!restTitle.equals("RestaurantManager")))
            jButton1.setVisible(false);
        if(restTitle.equals("RestaurantManager"))
            jLabel1.setText("Restaurant Dish Management");
    }//GEN-LAST:event_formWindowOpened

    private void jButtonDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItemActionPerformed
        // TODO add your handling code here:
        if (shopItem != null) {

            ShopItem response = deleteShopItemByItemId(shopItem.getId());
            if (response == null) {
                JOptionPane.showMessageDialog(this, "Item not updated!", "System Error", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Item Deleted successfully!", "System Feedback", JOptionPane.INFORMATION_MESSAGE);
                this.loadTable();
                this.setAllToNull();
                shopItem = null;
            }
        } else {
            JOptionPane.showMessageDialog(this, "You need to select an item first!", "Operation Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteItemActionPerformed

    private void jTextFieldBarcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBarcodeKeyReleased
        System.err.println("keyreleased jTextFieldBarcode: " + jTextFieldBarcode.getText());
    }//GEN-LAST:event_jTextFieldBarcodeKeyReleased

    private void jButtonUpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateItemActionPerformed
        // TODO add your handling code here:
        if (shopItem != null) {
            shopItem.setName(jTextFieldItemName.getText());
            shopItem.setBarcode(Long.valueOf(jTextFieldBarcode.getText()));
            shopItem.setQuantity(Integer.valueOf(jTextFieldQuantity.getText()));
            shopItem.setPrice(Float.valueOf(jTextFieldPrice.getText()));
            shopItem.setCategory(jTextFieldCategory.getText());
            shopItem.setDescription(jTextAreaDescription.getText());
            ShopItem response = addShoppingMallItem(shopId, shopItem);
            if (response == null) {
                JOptionPane.showMessageDialog(this, "Item not updated!", "System Error", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Item Updated successfully!", "System Feedback", JOptionPane.INFORMATION_MESSAGE);
                this.loadTable();
                this.setAllToNull();
                shopItem = null;
            }
        } else {
            JOptionPane.showMessageDialog(this, "You need to select an item first!", "Operation Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonUpdateItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RestaurantDirectUI mainMenuUI = new RestaurantDirectUI(shopId, restTitle);
        this.setVisible(false);
        mainMenuUI.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemsManagementUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemsManagementUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemsManagementUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemsManagementUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemsManagementUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonDeleteItem;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonUpdateItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldBarcode;
    private javax.swing.JTextField jTextFieldCategory;
    private javax.swing.JTextField jTextFieldItemName;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldQuantity;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        shoppingItems = getShoppingMallItemsByShopId(Long.parseLong(shopId));
        Object[][] data = new Object[shoppingItems.size()][5];
        for (int i = 0; i < shoppingItems.size(); i++) {
            data[i][0] = shoppingItems.get(i).getId();
            data[i][1] = shoppingItems.get(i).getName();
            data[i][2] = shoppingItems.get(i).getQuantity();
            data[i][3] = shoppingItems.get(i).getPrice();
            data[i][4] = shoppingItems.get(i).getCategory();
        }
//        Object[][] data = {{1,"Oversize Double Breasted Coat",30,"$219","Coat"},{2,"Short Coat with Metallic Buttons",20,"$239","Coat"},{3,"Checked Coat",25,"$319","Coat"},{4,"Combined Faux Leather Coat",30,"$239","Coat"},
//            {5,"Combined Striped Dress",15,"$139","Dress"},{6,"Dress with Zips",35,"$159","Dress"},{7,"Dress with Faux Leather Sleeves",10,"$69.9","Dress"},{8,"Velvet Dress",20,"$139","Dress"},
//            {9,"Wellies",10,"$109","Shoes"},{10,"Combined Wellies",10,"$109","Shoes"},{11,"Leather Chelsea Boot",10,"$149","Shoes"},{12,"Embellished Slipper",10,"$109","Shoes"},
//            {13,"Flat Suedu and Leather Boot",5,"$179","Shoes"},{14,"Brogue Blucher",5,"$109","Shoes"},{15,"Trousers with Zipped Waistband",20,"$109","Trousers"},{16,"Checked Print Trousers",20,"$79.9","Trousers"},
//            {17,"Motorbike Leggings",20,"$59.9","Trousers"},{18,"Coton Biker Trousers",20,"$39.9","Trousers"},{19,"5 Pocket Coated Trousers",20,"$109","Trousers"},{20,"Combination Mesh Trousers",20,"$109","Trousers"},
//            {21,"Fur Shopper Bag",15,"$149","Handbags"},{22,"Mini Fur Shopper",15,"$139","Handbags"},{23,"Tri-color Citybag",15,"$139","Handbags"},{24,"Leather Bowling Bag with Pockets",15,"$189","Handbags"},
//            {25,"Studio Box Pleat Skirt",5,"$139","Studio"},{26,"Studio Jacket",5,"$269","Studio"}};
        tableModel = new DefaultTableModel(data, new String[]{"ItemId", "Name", "Quantity", "Price", "Category"});

        jTable1.setModel(tableModel);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(70);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(70);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(80);
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (jTable1.getSelectedRow() != -1) {
                    shopItem = getShopItemByItemId((Long) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                }
                jTextFieldItemName.setText(shopItem.getName());
                jTextFieldBarcode.setText(shopItem.getBarcode().toString());
                jTextFieldQuantity.setText("" + shopItem.getQuantity());
                jTextFieldPrice.setText("" + shopItem.getPrice());
                jTextFieldCategory.setText(shopItem.getCategory());
                jTextAreaDescription.setText(shopItem.getDescription());
            }
        });
    }

    private static Shop getShopById(long shopId) {
        soap.common.CommonFunctionsUPOS_Service service = new soap.common.CommonFunctionsUPOS_Service();
        soap.common.CommonFunctionsUPOS port = service.getCommonFunctionsUPOSPort();
        return port.getShopById(shopId);
    }

    private static java.util.List<soap.common.ShopItem> getShoppingMallItemsByShopId(long shopId) {
        soap.common.CommonFunctionsUPOS_Service service = new soap.common.CommonFunctionsUPOS_Service();
        soap.common.CommonFunctionsUPOS port = service.getCommonFunctionsUPOSPort();
        return port.getShoppingMallItemsByShopId(shopId);
    }

    private static ShopItem getShopItemByItemId(long itemId) {
        soap.common.CommonFunctionsUPOS_Service service = new soap.common.CommonFunctionsUPOS_Service();
        soap.common.CommonFunctionsUPOS port = service.getCommonFunctionsUPOSPort();
        return port.getShopItemByItemId(itemId);
    }

    private static ShopItem deleteShopItemByItemId(long itemId) {
        soap.common.CommonFunctionsUPOS_Service service = new soap.common.CommonFunctionsUPOS_Service();
        soap.common.CommonFunctionsUPOS port = service.getCommonFunctionsUPOSPort();
        return port.deleteShopItemByItemId(itemId);
    }

    private static ShopItem addShoppingMallItem(java.lang.String curShop, soap.common.ShopItem newItem) {
        soap.common.CommonFunctionsUPOS_Service service = new soap.common.CommonFunctionsUPOS_Service();
        soap.common.CommonFunctionsUPOS port = service.getCommonFunctionsUPOSPort();
        return port.addShoppingMallItem(curShop, newItem);
    }
}
